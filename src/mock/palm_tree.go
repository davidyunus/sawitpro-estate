// Code generated by MockGen. DO NOT EDIT.
// Source: src/domain/palm_tree.go
//
// Generated by this command:
//
//	mockgen -source=src/domain/palm_tree.go -destination=src/mock/palm_tree.go
//

// Package mock_domain is a generated GoMock package.
package mock_domain

import (
	context "context"
	reflect "reflect"

	domain "github.com/davidyunus/sawitpro-estate/src/domain"
	gomock "go.uber.org/mock/gomock"
)

// MockPalmTreeLocationRepository is a mock of PalmTreeLocationRepository interface.
type MockPalmTreeLocationRepository struct {
	ctrl     *gomock.Controller
	recorder *MockPalmTreeLocationRepositoryMockRecorder
}

// MockPalmTreeLocationRepositoryMockRecorder is the mock recorder for MockPalmTreeLocationRepository.
type MockPalmTreeLocationRepositoryMockRecorder struct {
	mock *MockPalmTreeLocationRepository
}

// NewMockPalmTreeLocationRepository creates a new mock instance.
func NewMockPalmTreeLocationRepository(ctrl *gomock.Controller) *MockPalmTreeLocationRepository {
	mock := &MockPalmTreeLocationRepository{ctrl: ctrl}
	mock.recorder = &MockPalmTreeLocationRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPalmTreeLocationRepository) EXPECT() *MockPalmTreeLocationRepositoryMockRecorder {
	return m.recorder
}

// GetPalmTreesByUuid mocks base method.
func (m *MockPalmTreeLocationRepository) GetPalmTreesByUuid(ctx context.Context, id string) ([]domain.PalmTree, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPalmTreesByUuid", ctx, id)
	ret0, _ := ret[0].([]domain.PalmTree)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetPalmTreesByUuid indicates an expected call of GetPalmTreesByUuid.
func (mr *MockPalmTreeLocationRepositoryMockRecorder) GetPalmTreesByUuid(ctx, id any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPalmTreesByUuid", reflect.TypeOf((*MockPalmTreeLocationRepository)(nil).GetPalmTreesByUuid), ctx, id)
}

// PlantPalmTree mocks base method.
func (m *MockPalmTreeLocationRepository) PlantPalmTree(ctx context.Context, id string, param *domain.PalmTree) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PlantPalmTree", ctx, id, param)
	ret0, _ := ret[0].(error)
	return ret0
}

// PlantPalmTree indicates an expected call of PlantPalmTree.
func (mr *MockPalmTreeLocationRepositoryMockRecorder) PlantPalmTree(ctx, id, param any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PlantPalmTree", reflect.TypeOf((*MockPalmTreeLocationRepository)(nil).PlantPalmTree), ctx, id, param)
}
